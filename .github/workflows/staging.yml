name: .NET

on:
  pull_request:
    types: [opened, reopened]
    branches:
      - "main"

jobs:
  # build:
  #   runs-on: windows-latest

  #   steps:
  #     - name: Set up JDK 11
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 1.11
  #     - uses: actions/checkout@v3
  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v2
  #       with:
  #         dotnet-version: 5.0.x
  #     - name: Restore dependencies
  #       run: dotnet restore AeropuertoJSA.sln
  #         dotnet build AeropuertoJSA.sln --no-restore
  #         dotnet test AeropuertoJSA.sln --no-build --verbosity normal

  staging:
    needs: build
    runs-on: ubuntu-18.04

    steps:
      - name: Configure SSH
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}
          SSH_HOST: ${{ secrets.HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          mkdir -p ~/.ssh/
          echo "$KNOWN_HOSTS" > ~/.ssh/known_hosts
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
            Host staging
              HostName $SSH_HOST
              User $SSH_USER
              IdentityFile ~/.ssh/staging.key
              StrictHostKeyChecking no
          END
      - name: Stop the server
        run: ssh staging 'cd /diplo/airline-ms-checkin/ && docker-compose down'

      - name: Do deploy
        run: ssh staging 'cd /diplo/ && sh update-checkin.sh'

      - name: Start the server
        if: ${{ always() }}
        run: ssh staging 'cd /diplo/airline-ms-checkin/ && docker-compose up --build -d'
