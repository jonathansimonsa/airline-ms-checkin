// <auto-generated />
using System;
using CheckIn.Infraestructure.EF.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CheckIn.Infraestructure.EF.Migrations
{
    [DbContext(typeof(ReadDbContext))]
    [Migration("20220520231620_InitialStructure")]
    partial class InitialStructure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CheckIn.Infraestructure.EF.ReadModel.Adm.AdministrativoReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellidos")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("apellidos");

                    b.Property<string>("Cargo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("cargo");

                    b.Property<string>("Ci")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ci");

                    b.Property<string>("Nombres")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombres");

                    b.HasKey("Id");

                    b.ToTable("Administrativo");
                });

            modelBuilder.Entity("CheckIn.Infraestructure.EF.ReadModel.Avion.AsientoReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("codigo");

                    b.Property<int>("EsPrioridad")
                        .HasColumnType("int")
                        .HasColumnName("esPrioridad");

                    b.Property<int>("Fila")
                        .HasColumnType("int")
                        .HasColumnName("fila");

                    b.Property<string>("Letra")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("letra");

                    b.HasKey("Id");

                    b.ToTable("Asiento");
                });

            modelBuilder.Entity("CheckIn.Infraestructure.EF.ReadModel.CheckIn.CheckInReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdministrativoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AsientoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EsAltaPrioridad")
                        .HasColumnType("int")
                        .HasColumnName("esAltaPrioridad");

                    b.Property<DateTime>("HoraCheckIn")
                        .HasColumnType("datetime")
                        .HasColumnName("horaCheckIn");

                    b.Property<string>("NroCheckIn")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("nroCheckIn");

                    b.Property<Guid?>("TicketId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AdministrativoId");

                    b.HasIndex("AsientoId");

                    b.HasIndex("TicketId");

                    b.ToTable("CheckIn");
                });

            modelBuilder.Entity("CheckIn.Infraestructure.EF.ReadModel.CheckIn.EquipajeReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CheckInId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("descripcion");

                    b.Property<int>("EsFragil")
                        .HasColumnType("int")
                        .HasColumnName("esFragil");

                    b.Property<decimal>("Peso")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("peso");

                    b.HasKey("Id");

                    b.HasIndex("CheckInId");

                    b.ToTable("Equipaje");
                });

            modelBuilder.Entity("CheckIn.Infraestructure.EF.ReadModel.Ticket.TicketReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("HoraReserva")
                        .HasColumnType("datetime")
                        .HasColumnName("horaReserva");

                    b.HasKey("Id");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("CheckIn.Infraestructure.EF.ReadModel.CheckIn.CheckInReadModel", b =>
                {
                    b.HasOne("CheckIn.Infraestructure.EF.ReadModel.Adm.AdministrativoReadModel", "Administrativo")
                        .WithMany()
                        .HasForeignKey("AdministrativoId");

                    b.HasOne("CheckIn.Infraestructure.EF.ReadModel.Avion.AsientoReadModel", "Asiento")
                        .WithMany()
                        .HasForeignKey("AsientoId");

                    b.HasOne("CheckIn.Infraestructure.EF.ReadModel.Ticket.TicketReadModel", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId");

                    b.Navigation("Administrativo");

                    b.Navigation("Asiento");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("CheckIn.Infraestructure.EF.ReadModel.CheckIn.EquipajeReadModel", b =>
                {
                    b.HasOne("CheckIn.Infraestructure.EF.ReadModel.CheckIn.CheckInReadModel", "CheckIn")
                        .WithMany("DetalleEquipaje")
                        .HasForeignKey("CheckInId");

                    b.Navigation("CheckIn");
                });

            modelBuilder.Entity("CheckIn.Infraestructure.EF.ReadModel.CheckIn.CheckInReadModel", b =>
                {
                    b.Navigation("DetalleEquipaje");
                });
#pragma warning restore 612, 618
        }
    }
}
